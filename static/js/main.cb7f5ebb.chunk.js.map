{"version":3,"sources":["components/video_list/video_list.module.css","components/video_item/video_item.module.css","components/search_header/search_header.module.css","app.module.css","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/search_header/search_header.jsx","components/video_detail/video_detail.jsx","app.jsx","service/youtube.js","index.js","components/video_detail/video_detail.module.css"],"names":["module","exports","videos","container","grid","list","video","thumbnail","metadata","title","channel","header","logo","input","button","buttonImg","app","content","detail","VideoItem","memo","_ref","snippet","onVideoClick","displayType","display","styles","react_default","a","createElement","className","concat","onClick","src","thumbnails","medium","url","alt","channelTitle","VideoList","map","video_item","key","id","SearchHeader","onSearch","inputRef","useRef","handleSearch","value","current","img","ref","type","placeholder","onKeyPress","event","VideoDetail","width","height","frameBorder","allowFullScreen","description","App","youtube","_useState","useState","_useState2","Object","slicedToArray","setVideos","_useState3","_useState4","selectedVideo","setSelectedVideo","search","useCallback","query","then","useEffect","mostPopular","search_header","video_detail","video_list","Youtube","httpClient","classCallCheck","this","get","params","part","chart","maxResults","response","data","items","q","axios","create","baseURL","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb7f5ebb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__3i-CG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__2P2_h\",\"grid\":\"video_item_grid__3BCxV\",\"list\":\"video_item_list__1v5A-\",\"video\":\"video_item_video__HZmk4\",\"thumbnail\":\"video_item_thumbnail__1vghY\",\"metadata\":\"video_item_metadata__nbLYt\",\"title\":\"video_item_title__3zhvn\",\"channel\":\"video_item_channel__3TI4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__25_eY\",\"logo\":\"search_header_logo__3TA98\",\"input\":\"search_header_input__1DEKE\",\"button\":\"search_header_button__2UjeI\",\"buttonImg\":\"search_header_buttonImg__2bgOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__Q27ol\",\"content\":\"app_content__2zlQC\",\"detail\":\"app_detail__1ft5t\",\"list\":\"app_list__2GMSz\"};","import React, { memo } from \"react\";\nimport styles from \"./video_item.module.css\";\n\nconst VideoItem = memo(\n  ({ video, video: { snippet }, onVideoClick, display }) => {\n    const displayType = display === \"list\" ? styles.list : styles.grid;\n    return (\n      <li\n        className={`${styles.container} ${displayType}`}\n        onClick={() => onVideoClick(video)}\n      >\n        <div className={styles.video}>\n          <img\n            className={styles.thumbnail}\n            src={snippet.thumbnails.medium.url}\n            alt=\"video thumbnail\"\n          />\n          <div className={styles.metadata}>\n            <p className={styles.title}>{snippet.title}</p>\n            <p className={styles.channel}>{snippet.channelTitle}</p>\n          </div>\n        </div>\n      </li>\n    );\n  }\n);\n\nexport default VideoItem;\n","import React from \"react\";\nimport VideoItem from \"../video_item/video_item\";\nimport styles from \"./video_list.module.css\";\n\nconst VideoList = ({ videos, onVideoClick, display }) => (\n  <ul className={styles.videos}>\n    {videos.map(video => (\n      <VideoItem\n        key={video.id}\n        video={video}\n        onVideoClick={onVideoClick}\n        display={display}\n      />\n    ))}\n  </ul>\n);\n\nexport default VideoList;\n","import styles from \"./search_header.module.css\";\nimport React, { memo, useRef } from \"react\";\n\nconst SearchHeader = memo(({ onSearch }) => {\n  const inputRef = useRef();\n  const handleSearch = () => {\n    const value = inputRef.current.value;\n    onSearch(value);\n  };\n  const onClick = () => {\n    handleSearch();\n  };\n\n  const onKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  return (\n    <header className={styles.header}>\n      <div className={styles.logo}>\n        <img className={styles.img} src=\"./images/logo.png\" alt=\"logo\" />\n        <h1 className={styles.title}>Youtube</h1>\n      </div>\n      <input\n        ref={inputRef}\n        className={styles.input}\n        type=\"search\"\n        placeholder=\"Search...\"\n        onKeyPress={onKeyPress}\n      />\n      <button className={styles.button} type=\"submit\" onClick={onClick}>\n        <img\n          className={styles.buttonImg}\n          src=\"./images/search.png\"\n          alt=\"search\"\n        />\n      </button>\n    </header>\n  );\n});\n\nexport default SearchHeader;\n","import React from \"react\";\r\nimport styles from \"./video_detail.module.css\";\r\n\r\nconst VideoDetail = ({ video, video: { snippet } }) => (\r\n  <section className={styles.detail}>\r\n    <iframe\r\n      className={styles.video}\r\n      //   id=\"ytplayer\"\r\n      type=\"text/html\"\r\n      title=\"youtube video player\"\r\n      width=\"100%\"\r\n      height=\"500px\"\r\n      src={`https://www.youtube.com/embed/${video.id}`}\r\n      frameBorder=\"0\"\r\n      allowFullScreen\r\n    ></iframe>\r\n    <h2>{snippet.title}</h2>\r\n    <h3>{snippet.channelTitle}</h3>\r\n    <pre className={styles.description}>{snippet.description}</pre>\r\n  </section>\r\n);\r\n\r\nexport default VideoDetail;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styles from \"./app.module.css\";\nimport VideoList from \"./components/video_list/video_list\";\nimport SearchHeader from \"./components/search_header/search_header\";\nimport VideoDetail from \"./components/video_detail/video_detail\";\n\nfunction App({ youtube }) {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const selectVideo = video => {\n    setSelectedVideo(video);\n  };\n  const search = useCallback(query => {\n    youtube\n      .search(query) //\n      .then(videos => {\n        setSelectedVideo(null);\n        setVideos(videos);\n      });\n  }, []);\n\n  useEffect(() => {\n    youtube\n      .mostPopular() //\n      .then(videos => setVideos(videos));\n  }, []);\n  return (\n    <div className={styles.app}>\n      <SearchHeader onSearch={search} />\n      <section className={styles.content}>\n        {selectedVideo && (\n          <div className={styles.detail}>\n            <VideoDetail video={selectedVideo} />\n          </div>\n        )}\n        <div className={styles.list}>\n          <VideoList\n            videos={videos}\n            onVideoClick={selectVideo}\n            display={selectedVideo ? \"list\" : \"grid\"}\n          />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// import axios from \"axios\";\n\nclass Youtube {\n  constructor(httpClient) {\n    this.youtube = httpClient;\n  }\n  // constructor(key) {\n  //   this.youtube = axios.create({\n  //     baseURL: \"https://www.googleapis.com/youtube/v3\",\n  //     params: { key: key }, //받아온 key를 key에 설정\n  //   });\n  // }\n\n  async mostPopular() {\n    const response = await this.youtube.get(\"videos\", {\n      params: {\n        part: \"snippet\",\n        chart: \"mostPopular\",\n        maxResults: \"25\",\n      },\n    });\n    return response.data.items;\n    // const response = await fetch(\n    //   `https://www.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&maxResults=25&key=${this.key}`,\n    //   this.getRequestOptions\n    // );\n    // const result = await response.json();\n    // return result.items;\n  }\n\n  async search(query) {\n    const response = await this.youtube.get(\"search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: \"25\",\n        q: query,\n        type: \"video\",\n      },\n    });\n    return response.data.items;\n    // const response = await fetch(\n    //   `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${query}&type=video&key=${this.key}`,\n    //   this.getRequestOptions\n    // );\n    // const result = await response.json();\n    // return result.items.map(item => ({ ...item, id: item.id.videoId }));\n  }\n}\n\nexport default Youtube;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport Youtube from \"./service/youtube\";\nimport axios from \"axios\";\n\n// const youtube = new Youtube(process.env.REACT_APP_YOUTUBE_API_KEY);\nconst httpClient = axios.create({\n  baseURL: \"https://www.googleapis.com/youtube/v3\",\n  params: { key: process.env.REACT_APP_YOUTUBE_API_KEY }, //받아온 key를 key에 설정\n});\nconst youtube = new Youtube(httpClient);\n// constructor(key) {\n//   this.youtube = axios.create({\n//     baseURL: \"https://www.googleapis.com/youtube/v3\",\n//     params: { key: key }, //받아온 key를 key에 설정\n//   });\n// }\n\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"video_detail_detail__1kc2f\",\"description\":\"video_detail_description__3xRpV\"};"],"sourceRoot":""}